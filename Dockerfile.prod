###########
# BUILDER #
###########

# pull official base image
FROM python:3.9.7-slim as builder

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# set work directory
WORKDIR /usr/src/app

# install psycopg2 dependencies
RUN apt-get update \
    && apt-get -y install libpq-dev gcc 

# install dependencies
COPY ./src/requirements.txt .
RUN pip install --upgrade pip
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.9.7-slim

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

ENV APP_HOME=/django
ENV ENTRYPOINT="entrypoint.prod.sh"
ENV ENTRYPOINT_DIR="${APP_HOME}/${ENTRYPOINT}"

# create venv & use as default
ENV VENV_DIR=/venv
RUN python -m venv $VENV_DIR
ENV PATH="$VENV_DIR/bin:$PATH"

WORKDIR $APP_HOME

# install dependencies
RUN apt update && apt install libpq-dev gcc -y -q
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --upgrade pip wheel && pip install --no-cache /wheels/*

# copy entrypoint.prod.sh
ADD ./src/${ENTRYPOINT} .
RUN sed -i 's/\r$//g' $ENTRYPOINT_DIR
RUN chmod +x $ENTRYPOINT_DIR

# copy project
COPY ./src $APP_HOME

RUN python manage.py collectstatic --no-input

# create the app user & permit to use app files
RUN addgroup app && useradd -g app app
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

# run entrypoint.prod.sh
ENTRYPOINT ["/django/entrypoint.prod.sh"]
